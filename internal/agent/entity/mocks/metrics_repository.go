// Code generated by mockery v2.50.0. DO NOT EDIT.

package mocks

import (
	entity "github.com/gdyunin/metricol.git/internal/agent/entity"
	mock "github.com/stretchr/testify/mock"
)

// MockMetricsRepository is an autogenerated mock type for the MetricsRepository type
type MockMetricsRepository struct {
	mock.Mock
}

// Add provides a mock function with given fields: metric
func (_m *MockMetricsRepository) Add(metric *entity.Metric) {
	_m.Called(metric)
}

// Metrics provides a mock function with no fields
func (_m *MockMetricsRepository) Metrics() []*entity.Metric {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Metrics")
	}

	var r0 []*entity.Metric
	if rf, ok := ret.Get(0).(func() []*entity.Metric); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*entity.Metric)
		}
	}

	return r0
}

// NewMockMetricsRepository creates a new instance of MockMetricsRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockMetricsRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockMetricsRepository {
	mock := &MockMetricsRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
